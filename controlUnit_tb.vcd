$date
  Sun Jul 12 20:10:20 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module controlunit_tb $end
$var reg 32 ! instr[31:0] $end
$var reg 1 " equal $end
$var reg 2 # if_pc_sel[1:0] $end
$var reg 1 $ ex_alu_sel_a $end
$var reg 1 % ex_alu_sel_b $end
$var reg 2 & ex_sel_dst[1:0] $end
$var reg 3 ' ex_alu_op[2:0] $end
$var reg 1 ( mem_ram_r_w $end
$var reg 2 ) mem_sel_wd[1:0] $end
$var reg 1 * wb_regwrite $end
$scope module uut $end
$var reg 32 + instr[31:0] $end
$var reg 1 , equal $end
$var reg 2 - if_pc_sel[1:0] $end
$var reg 1 . ex_alu_sel_a $end
$var reg 1 / ex_alu_sel_b $end
$var reg 2 0 ex_sel_dst[1:0] $end
$var reg 3 1 ex_alu_op[2:0] $end
$var reg 1 2 mem_ram_r_w $end
$var reg 2 3 mem_sel_wd[1:0] $end
$var reg 1 4 wb_regwrite $end
$var reg 6 5 opcode[5:0] $end
$var reg 6 6 funct[5:0] $end
$var reg 2 7 pc_sel[1:0] $end
$var reg 1 8 alu_sel_a $end
$var reg 1 9 alu_sel_b $end
$var reg 2 : sel_dst[1:0] $end
$var reg 3 ; alu_op[2:0] $end
$var reg 1 < ram_r_w $end
$var reg 2 = sel_wd[1:0] $end
$var reg 1 > regwrite $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b10001100000000000000000000000000 !
0"
bUU #
U$
U%
bUU &
bUUU '
U(
bUU )
U*
b10001100000000000000000000000000 +
0,
bUU -
U.
U/
bUU 0
bUUU 1
U2
bUU 3
U4
b100011 5
b000000 6
b00 7
08
19
b00 :
b011 ;
0<
b01 =
1>
#500000
b00 #
0$
1%
b00 &
b011 '
0(
b01 )
1*
b00 -
0.
1/
b00 0
b011 1
02
b01 3
14
#10000000
b10101100000000000000000000000000 !
b10101100000000000000000000000000 +
b101011 5
1<
b00 =
0>
#10500000
1(
b00 )
0*
12
b00 3
04
#20000000
b00100000000000000000000000000000 !
b00100000000000000000000000000000 +
b001000 5
0<
1>
#20500000
0(
1*
02
14
#30000000
b00010000000000000000000000000000 !
b00010000000000000000000000000000 +
b000100 5
09
b000 ;
0>
#30500000
0%
b000 '
0*
0/
b000 1
04
#35000000
1"
1,
b10 7
#35500000
b10 #
b10 -
#40000000
b00101000000000000000000000000000 !
0"
b00101000000000000000000000000000 +
0,
b001010 5
b00 7
19
b100 ;
1>
#40500000
b00 #
1%
b100 '
1*
b00 -
1/
b100 1
14
#50000000
b00010100000000000000000000000000 !
b00010100000000000000000000000000 +
b000101 5
b10 7
09
b000 ;
0>
#50500000
b10 #
0%
b000 '
0*
b10 -
0/
b000 1
04
#55000000
1"
1,
b00 7
#55500000
b00 #
b00 -
#60000000
b00000000000000000000000000100000 !
0"
b00000000000000000000000000100000 +
0,
b000000 5
b100000 6
b00 7
b01 :
b011 ;
1>
#60500000
b01 &
b011 '
1*
b00 -
b01 0
b011 1
14
#70000000
b00000000000000000000000000101010 !
b00000000000000000000000000101010 +
b101010 6
b100 ;
#70500000
b100 '
b100 1
#80000000
b00000000000000000000000000001000 !
b00000000000000000000000000001000 +
b001000 6
b11 7
b000 ;
0>
#80500000
b11 #
b000 '
0*
b11 -
b000 1
04
#90000000
b00000000000000000000000000100001 !
b00000000000000000000000000100001 +
b100001 6
b00 7
b010 ;
1>
#90500000
b00 #
b010 '
1*
b00 -
b010 1
14
#100000000
b00000000000000000000000000000000 !
b00000000000000000000000000000000 +
b000000 6
18
b001 ;
#100500000
1$
b001 '
1.
b001 1
#110000000
b00001000000000000000000000000000 !
b00001000000000000000000000000000 +
b000010 5
b01 7
08
b00 :
b000 ;
0>
#110500000
b01 #
0$
b00 &
b000 '
0*
b01 -
0.
b00 0
b000 1
04
#120000000
b00001100000000000000000000000000 !
b00001100000000000000000000000000 +
b000011 5
b10 :
b10 =
1>
#120500000
b10 &
b10 )
1*
b10 0
b10 3
14
#130000000
